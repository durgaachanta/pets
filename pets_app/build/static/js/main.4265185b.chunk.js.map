{"version":3,"sources":["redux.js","component/PetsHomePage.js","component/NewPetPage.js","component/EditPetPage.js","component/PetDetails.js","container/PetsParentContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","petDetails","store","createStore","state","arguments","length","undefined","action","console","log","type","Object","objectSpread","payload","concat","toConsumableArray","slice","idx","window","__REDUX_DEVTOOLS_EXTENSION__","PetsHomePage","componentDidMount","axios","get","then","response","status","_this","props","initialLoad","data","catch","error","react_default","a","createElement","className","react_router_dom","to","this","petsdata","map","item","name","id","React","Component","connect","dispatch","NewPetPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","value","nameClass","nameValid","typeClass","typeValid","descriptionClass","descriptionValid","addPetData","skill","skill1","skill2","skill3","jsonObject","petdata","toString","description","skills","likes","post","addNewPetToRedux","history","push","_this2","onSubmit","preventDefault","htmlFor","onChange","onClick","disabled","thispetDetails","find","match","params","petindex","findIndex","index","editPetData","put","editPetInRedux","PetDetails","pet","deletePet","delete","deletePetFromRedux","class","PetsParentContainer","react_router","exact","from","path","component","EditPetPage","App","container_PetsParentContainer","Boolean","location","hostname","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4265185b.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  petDetails: [],\n};\n\n//action\nexport const updateReduxStore = (petdata) => ({\n  type: \"UPDATE_REDUX_INITIAL_LOAD\",\n  payload: petdata,\n\n});\n\nexport const addNewPetData = (newpetdata) => ({\n  type: \"ADD_NEW_PET_DATA\",\n  payload: newpetdata,\n});\n\nexport const deletePet = (index) => ({\n  type: \"DELETE_PET\",\n  payload: index,\n});\n\nexport const editPetData = (petdata, index) => ({\n  type: \"EDIT_PET_DATA\",\n  payload: petdata,\n  idx: index,\n});\n\nexport const reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"UPDATE_REDUX_INITIAL_LOAD\":\n      return {\n        ...state,\n        petDetails: action.payload,\n      };\n    case \"ADD_NEW_PET_DATA\":\n      return {\n        ...state,\n        petDetails: [...state.petDetails, action.payload],\n      };\n    case \"DELETE_PET\":\n      return {\n        ...state,\n        petDetails: [\n          ...state.petDetails.slice(0, action.payload),\n          ...state.petDetails.slice(action.payload + 1),\n        ]\n      };\n    case \"EDIT_PET_DATA\":\n      return {\n        ...state,\n        petDetails: [\n          ...state.petDetails.slice(0, action.idx),\n          state.petDetails[action.idx] = action.payload,\n          ...state.petDetails.slice(action.idx + 1),\n        ]\n      };\n    default:\n      return state;\n  }\n\n};\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateReduxStore } from '../redux';\nimport '../styles/styles.css';\n\nclass PetsHomePage extends React.Component {\n\n  componentDidMount = () => {\n    //axios call to fetch data from MockAPI\n    axios.get('/pets/fetchpetsdata')\n      .then((response) => {\n        //if successful push data to redux store\n        if (response.status === 200) {\n          this.props.initialLoad(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"pagecontainer\">\n        <h2> These pets are looking for a home!</h2>\n        <Link to=\"/pets/new\">Add a pet to the shelter</Link>\n        <div>\n          <table className=\"table\">\n            <tr>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Actions</th>\n            </tr>\n            {this.props.petsdata.map((item) => {\n              return (\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.type}</td>\n                  <td>\n                    <button className=\"btn-lg petbtn\">\n                      <Link to={`/pets/${item.id}`}>\n                        Details\n                       </Link>\n                    </button>\n                    <button className=\"btn-lg petbtn\">\n                      <Link to={`/pets/${item.id}/edit`}>\n                        Edit\n                      </Link>\n                    </button>\n                  </td>\n                </tr>\n              )\n            })}\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  petsdata: state.petDetails,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  initialLoad: (data) => {\n    dispatch(updateReduxStore(data))\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PetsHomePage);","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addNewPetData } from '../redux';\nimport \"../styles/styles.css\";\n\nclass NewPetPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      type: '',\n      description: '',\n      skill1: '',\n      skill2: '',\n      skill3: '',\n      nameClass: \"hide\",\n      nameValid: 0,\n      typeClass: \"hide\",\n      typeValid: 0,\n      descriptionClass: \"hide\",\n      descriptionValid: 0,\n    }\n\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    if (event.target.name === \"name\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ nameClass: \"error\" });\n      } else {\n        this.setState({ nameClass: \"hide\", nameValid: 1 });\n      }\n    } else if (event.target.name === \"type\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ typeClass: \"error\" });\n      } else {\n        this.setState({ typeClass: \"hide\", typeValid: 1 });\n      }\n\n    } else if (event.target.name === \"description\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ descriptionClass: \"error\" });\n      } else {\n        this.setState({ descriptionClass: \"hide\", descriptionValid: 1 });\n      }\n    }\n  }\n\n  addPetData = () => {\n    //build the json structure and make a post call to Mock API to store data\n    var skill = [];\n    //fix the skills array - do not pass empty strings\n    skill = [this.state.skill1, this.state.skill2, this.state.skill3];\n    console.log(skill);\n\n    var jsonObject = {\n      id: (this.props.petdata.length + 1).toString(),\n      name: this.state.name,\n      type: this.state.type,\n      description: this.state.description,\n      skills: skill,\n      likes: 0,\n    }\n\n    //axios call\n    axios.post('/pets/postnewpetdata', jsonObject)\n      .then((response) => {\n        if (response.status === 200) {\n          //push new data to Redux store and change route back to home page\n          this.props.addNewPetToRedux(jsonObject);\n          this.props.history.push('/pets');\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"pagecontainer\">\n        <h2>Know of a pet needing a home?</h2>\n        <h3>The pet must have a name</h3>\n        <form onSubmit={(event) => { event.preventDefault() }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Pet name:</label>\n            <input className=\"form-control\" name=\"name\" onChange={this.handleChange} />\n            <small className={this.state.nameClass}>Petname must be 3 characters long</small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Pet type:</label>\n            <input className=\"form-control\" name=\"type\" onChange={this.handleChange} />\n            <small className={this.state.typeClass}>Pet type must be 3 characters long</small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Pet description:</label>\n            <input className=\"form-control\" name=\"description\" onChange={this.handleChange} />\n            <small className={this.state.descriptionClass}>description must be atleast 3 characters long</small>\n          </div>\n          <label>Skills:</label>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill1\">Skill 1:</label>\n            <input className=\"form-control\" name=\"skill1\" onChange={this.handleChange} value={this.state.skill1} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill2\">Skill 2:</label>\n            <input className=\"form-control\" name=\"skill2\" onChange={this.handleChange} value={this.state.skill2} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill3\">Skill 3:</label>\n            <input className=\"form-control\" name=\"skill3\" onChange={this.handleChange} value={this.state.skill3} />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn-lg petbtn\" onClick={this.addPetData} disabled={(this.state.nameValid && this.state.typeValid && this.state.descriptionValid) ? false : true}>Add Pet</button>\n            <button className=\"btn-lg petbtn\" onClick={() => { this.props.history.push('/pets') }}>Cancel</button>\n          </div>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  petdata: state.petDetails,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNewPetToRedux: (data) => {\n    dispatch(addNewPetData(data))\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPetPage);","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { editPetData } from '../redux';\n\nclass NewPetPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      type: '',\n      description: '',\n      skill1: '',\n      skill2: '',\n      skill3: '',\n      nameClass: \"hide\",\n      nameValid: 0,\n      typeClass: \"hide\",\n      typeValid: 0,\n      descriptionClass: \"hide\",\n      descriptionValid: 0,\n    }\n\n  };\n  componentDidMount = () => {\n    var thispetDetails = this.props.petdata.find((item) => item.id === this.props.match.params.id);\n    var petindex = this.props.petdata.findIndex((item) => item.id === this.props.match.params.id);\n    this.setState({\n      name: thispetDetails.name,\n      type: thispetDetails.type,\n      description: thispetDetails.description,\n      skill1: thispetDetails.skills[0] ? thispetDetails.skills[0] : '',\n      skill2: thispetDetails.skills[1] ? thispetDetails.skills[1] : '',\n      skill3: thispetDetails.skills[2] ? thispetDetails.skills[2] : '',\n      index: petindex,\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    if (event.target.name === \"name\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ nameClass: \"error\" });\n      } else {\n        this.setState({ nameClass: \"hide\", nameValid: 1 });\n      }\n    } else if (event.target.name === \"type\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ typeClass: \"error\" });\n      } else {\n        this.setState({ typeClass: \"hide\", typeValid: 1 });\n      }\n\n    } else if (event.target.name === \"description\") {\n      if (event.target.value.length < 3) {\n\n        this.setState({ descriptionClass: \"error\" });\n      } else {\n        this.setState({ descriptionClass: \"hide\", descriptionValid: 1 });\n      }\n    }\n  }\n\n  editPetData = () => {\n    //build the json structure and make a post call to Mock API to store data\n    var skill = [];\n    //fix the skills array - do not pass empty strings\n    skill = [this.state.skill1, this.state.skill2, this.state.skill3];\n    console.log(skill);\n\n    var jsonObject = {\n      id: this.props.match.params.id,\n      name: this.state.name,\n      type: this.state.type,\n      description: this.state.description,\n      skills: skill,\n      likes: 0,\n    }\n    console.log(jsonObject);\n\n    //axios call to edit data\n    axios.put(`/pets/editpetdata/${this.props.match.params.id}`, jsonObject)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          //push new data to Redux store and change route back to home page\n          this.props.editPetInRedux(jsonObject, this.state.index);\n          this.props.history.push('/pets');\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"pagecontainer\">\n        <h3>Edit this pet details</h3>\n        <form onSubmit={(event) => { event.preventDefault() }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Pet name:</label>\n            <input className=\"form-control\" name=\"name\" onChange={this.handleChange} value={this.state.name} />\n            <small className={this.state.nameClass}>Petname must be 3 characters long</small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Pet type:</label>\n            <input className=\"form-control\" name=\"type\" onChange={this.handleChange} value={this.state.type} />\n            <small className={this.state.typeClass}>Pet type must be 3 characters long</small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Pet description:</label>\n            <input className=\"form-control\" name=\"description\" onChange={this.handleChange} value={this.state.description} />\n            <small className={this.state.descriptionClass}>description must be atleast 3 characters long</small>\n          </div>\n          <label>Skills:</label>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill1\">Skill 1:</label>\n            <input className=\"form-control\" name=\"skill1\" onChange={this.handleChange} value={this.state.skill1} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill2\">Skill 2:</label>\n            <input className=\"form-control\" name=\"skill2\" onChange={this.handleChange} value={this.state.skill2} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"skill3\">Skill 3:</label>\n            <input className=\"form-control\" name=\"skill3\" onChange={this.handleChange} value={this.state.skill3} />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn-lg petbtn\" onClick={this.editPetData}>Edit Pet</button>\n            <button className=\"btn-lg petbtn\" onClick={() => { this.props.history.push('/pets') }}>Cancel</button>\n          </div>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  petdata: state.petDetails,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  editPetInRedux: (data, idx) => {\n    dispatch(editPetData(data, idx))\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPetPage);","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { deletePet } from '../redux';\nimport \"../styles/styles.css\";\n\nclass PetDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pet: '',\n      index: '',\n    };\n  };\n\n  componentDidMount = () => {\n    var thispetDetails = this.props.petDetails.find((item) => item.id === this.props.match.params.id);\n    var petindex = this.props.petDetails.findIndex((item) => item.id === this.props.match.params.id);\n    this.setState({ pet: thispetDetails, index: petindex });\n  }\n  deletePet = () => {\n    //axios call to delete this record from MockAPI\n    axios.delete(`/pets/deletepet/${this.props.match.params.id}`)\n      .then((response) => {\n        if (response.status === 200) {\n          // delete this pet record from Redux\n          this.props.deletePetFromRedux(this.state.index);\n          //reroute the page to home\n          this.props.history.push('/pets');\n\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div class=\"pagecontainer\">\n        <h2>Details about {this.state.pet.name}</h2>\n        <h3><span>Pet type:</span>{this.state.pet.type}</h3>\n        <h3><span>description:</span>{this.state.pet.description}</h3>\n        <h3><span>skills:</span></h3>\n        <ul>\n          {this.state.pet.skills !== undefined ? this.state.pet.skills.map((item) => {\n            return <li>{item}</li>\n          }) : ''}\n        </ul>\n        <h3><span>likes:</span>{this.state.pet.likes}</h3>\n        <button className=\"btn-lg petbtn\">Like this pet</button>\n        <button className=\"btn-lg petbtn\" onClick={this.deletePet}>Adopt this pet</button>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  petDetails: state.petDetails,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deletePetFromRedux: (idx) => {\n    dispatch(deletePet(idx))\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PetDetails);","import React from 'react';\nimport 'react-router';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport PetsHomePage from '../component/PetsHomePage';\nimport NewPetPage from '../component/NewPetPage';\nimport EditPetPage from '../component/EditPetPage';\nimport PetDetails from '../component/PetDetails';\n\nclass PetsParentContainer extends React.Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <h1>Pet Shelter</h1>\n        {/* Routing */}\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/pets\" />\n          <Route exact path=\"/pets/:id/edit\" component={EditPetPage} />\n          <Route exact path=\"/pets/new\" component={NewPetPage} />\n          <Route exact path=\"/pets/:id\" component={PetDetails} />\n          <Route exact path=\"/pets\" component={PetsHomePage} />\n        </Switch>\n      </div>\n    )\n  }\n\n}\nexport default PetsParentContainer;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport PetsParentContainer from './container/PetsParentContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <PetsParentContainer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}